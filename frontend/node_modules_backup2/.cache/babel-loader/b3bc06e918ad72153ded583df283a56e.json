{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _asyncToGenerator = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveCname = exports.performGSSAPICanonicalizeHostName = exports.GSSAPI = exports.GSSAPICanonicalizationValue = void 0;\nvar dns = require(\"dns\");\nvar deps_1 = require(\"../../deps\");\nvar error_1 = require(\"../../error\");\nvar utils_1 = require(\"../../utils\");\nvar auth_provider_1 = require(\"./auth_provider\");\n/** @public */\nexports.GSSAPICanonicalizationValue = Object.freeze({\n  on: true,\n  off: false,\n  none: 'none',\n  forward: 'forward',\n  forwardAndReverse: 'forwardAndReverse'\n});\nfunction externalCommand(_x, _x2) {\n  return _externalCommand.apply(this, arguments);\n}\nfunction _externalCommand() {\n  _externalCommand = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(connection, command) {\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", connection.commandAsync((0, utils_1.ns)('$external.$cmd'), command, undefined));\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _externalCommand.apply(this, arguments);\n}\nvar krb;\nvar GSSAPI = /*#__PURE__*/function (_auth_provider_1$Auth) {\n  _inherits(GSSAPI, _auth_provider_1$Auth);\n  function GSSAPI() {\n    _classCallCheck(this, GSSAPI);\n    return _possibleConstructorReturn(this, _getPrototypeOf(GSSAPI).apply(this, arguments));\n  }\n  _createClass(GSSAPI, [{\n    key: \"auth\",\n    value: function () {\n      var _auth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(authContext) {\n        var connection, credentials, username, client, payload, saslStartResponse, negotiatedPayload, saslContinueResponse, finalizePayload;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                connection = authContext.connection, credentials = authContext.credentials;\n                if (!(credentials == null)) {\n                  _context.next = 3;\n                  break;\n                }\n                throw new error_1.MongoMissingCredentialsError('Credentials required for GSSAPI authentication');\n              case 3:\n                username = credentials.username;\n                _context.next = 6;\n                return makeKerberosClient(authContext);\n              case 6:\n                client = _context.sent;\n                _context.next = 9;\n                return client.step('');\n              case 9:\n                payload = _context.sent;\n                _context.next = 12;\n                return externalCommand(connection, saslStart(payload));\n              case 12:\n                saslStartResponse = _context.sent;\n                _context.next = 15;\n                return negotiate(client, 10, saslStartResponse.payload);\n              case 15:\n                negotiatedPayload = _context.sent;\n                _context.next = 18;\n                return externalCommand(connection, saslContinue(negotiatedPayload, saslStartResponse.conversationId));\n              case 18:\n                saslContinueResponse = _context.sent;\n                _context.next = 21;\n                return finalize(client, username, saslContinueResponse.payload);\n              case 21:\n                finalizePayload = _context.sent;\n                _context.next = 24;\n                return externalCommand(connection, {\n                  saslContinue: 1,\n                  conversationId: saslContinueResponse.conversationId,\n                  payload: finalizePayload\n                });\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      function auth(_x3) {\n        return _auth.apply(this, arguments);\n      }\n      return auth;\n    }()\n  }]);\n  return GSSAPI;\n}(auth_provider_1.AuthProvider);\nexports.GSSAPI = GSSAPI;\nfunction makeKerberosClient(_x4) {\n  return _makeKerberosClient.apply(this, arguments);\n}\nfunction _makeKerberosClient() {\n  _makeKerberosClient = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(authContext) {\n    var hostAddress, credentials, _krb, initializeClient, username, password, mechanismProperties, serviceName, host, initOptions, spnHost, spn;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            hostAddress = authContext.options.hostAddress;\n            credentials = authContext.credentials;\n            if (!(!hostAddress || typeof hostAddress.host !== 'string' || !credentials)) {\n              _context3.next = 4;\n              break;\n            }\n            throw new error_1.MongoInvalidArgumentError('Connection must have host and port and credentials defined.');\n          case 4:\n            loadKrb();\n            if (!('kModuleError' in krb)) {\n              _context3.next = 7;\n              break;\n            }\n            throw krb['kModuleError'];\n          case 7:\n            _krb = krb, initializeClient = _krb.initializeClient;\n            username = credentials.username, password = credentials.password;\n            mechanismProperties = credentials.mechanismProperties;\n            serviceName = mechanismProperties.SERVICE_NAME ?? 'mongodb';\n            _context3.next = 13;\n            return performGSSAPICanonicalizeHostName(hostAddress.host, mechanismProperties);\n          case 13:\n            host = _context3.sent;\n            initOptions = {};\n            if (password != null) {\n              // TODO(NODE-5139): These do not match the typescript options in initializeClient\n              Object.assign(initOptions, {\n                user: username,\n                password: password\n              });\n            }\n            spnHost = mechanismProperties.SERVICE_HOST ?? host;\n            spn = \"\".concat(serviceName).concat(process.platform === 'win32' ? '/' : '@').concat(spnHost);\n            if ('SERVICE_REALM' in mechanismProperties) {\n              spn = \"\".concat(spn, \"@\").concat(mechanismProperties.SERVICE_REALM);\n            }\n            return _context3.abrupt(\"return\", initializeClient(spn, initOptions));\n          case 20:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _makeKerberosClient.apply(this, arguments);\n}\nfunction saslStart(payload) {\n  return {\n    saslStart: 1,\n    mechanism: 'GSSAPI',\n    payload: payload,\n    autoAuthorize: 1\n  };\n}\nfunction saslContinue(payload, conversationId) {\n  return {\n    saslContinue: 1,\n    conversationId: conversationId,\n    payload: payload\n  };\n}\nfunction negotiate(_x5, _x6, _x7) {\n  return _negotiate.apply(this, arguments);\n}\nfunction _negotiate() {\n  _negotiate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(client, retries, payload) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return client.step(payload);\n          case 3:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response || '');\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            if (!(retries === 0)) {\n              _context4.next = 11;\n              break;\n            }\n            throw _context4.t0;\n          case 11:\n            return _context4.abrupt(\"return\", negotiate(client, retries - 1, payload));\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n  return _negotiate.apply(this, arguments);\n}\nfunction finalize(_x8, _x9, _x10) {\n  return _finalize.apply(this, arguments);\n}\nfunction _finalize() {\n  _finalize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(client, user, payload) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return client.unwrap(payload);\n          case 2:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", client.wrap(response || '', {\n              user: user\n            }));\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _finalize.apply(this, arguments);\n}\nfunction performGSSAPICanonicalizeHostName(_x11, _x12) {\n  return _performGSSAPICanonicalizeHostName.apply(this, arguments);\n}\nfunction _performGSSAPICanonicalizeHostName() {\n  _performGSSAPICanonicalizeHostName = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(host, mechanismProperties) {\n    var mode, _yield$dns$promises$l, address, results;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            mode = mechanismProperties.CANONICALIZE_HOST_NAME;\n            if (!(!mode || mode === exports.GSSAPICanonicalizationValue.none)) {\n              _context6.next = 3;\n              break;\n            }\n            return _context6.abrupt(\"return\", host);\n          case 3:\n            if (!(mode === exports.GSSAPICanonicalizationValue.on || mode === exports.GSSAPICanonicalizationValue.forwardAndReverse)) {\n              _context6.next = 20;\n              break;\n            }\n            _context6.next = 6;\n            return dns.promises.lookup(host);\n          case 6:\n            _yield$dns$promises$l = _context6.sent;\n            address = _yield$dns$promises$l.address;\n            _context6.prev = 8;\n            _context6.next = 11;\n            return dns.promises.resolvePtr(address);\n          case 11:\n            results = _context6.sent;\n            return _context6.abrupt(\"return\", results.length > 0 ? results[0] : host);\n          case 15:\n            _context6.prev = 15;\n            _context6.t0 = _context6[\"catch\"](8);\n            return _context6.abrupt(\"return\", resolveCname(host));\n          case 18:\n            _context6.next = 21;\n            break;\n          case 20:\n            return _context6.abrupt(\"return\", resolveCname(host));\n          case 21:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[8, 15]]);\n  }));\n  return _performGSSAPICanonicalizeHostName.apply(this, arguments);\n}\nexports.performGSSAPICanonicalizeHostName = performGSSAPICanonicalizeHostName;\nfunction resolveCname(_x13) {\n  return _resolveCname.apply(this, arguments);\n}\nfunction _resolveCname() {\n  _resolveCname = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(host) {\n    var results;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return dns.promises.resolveCname(host);\n          case 3:\n            results = _context7.sent;\n            return _context7.abrupt(\"return\", results.length > 0 ? results[0] : host);\n          case 7:\n            _context7.prev = 7;\n            _context7.t0 = _context7[\"catch\"](0);\n            return _context7.abrupt(\"return\", host);\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 7]]);\n  }));\n  return _resolveCname.apply(this, arguments);\n}\nexports.resolveCname = resolveCname;\n/**\n * Load the Kerberos library.\n */\nfunction loadKrb() {\n  if (!krb) {\n    krb = (0, deps_1.getKerberos)();\n  }\n}","map":null,"metadata":{},"sourceType":"script"}