{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Users/aryasastry/bootcamp-project-2022/milestone3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MongoCryptKMSRequestNetworkTimeoutError = exports.MongoCryptAzureKMSRequestError = exports.MongoCryptCreateEncryptedCollectionError = exports.MongoCryptCreateDataKeyError = exports.MongoCryptInvalidArgumentError = exports.MongoCryptError = void 0;\nvar error_1 = require(\"../error\");\n/**\n * @public\n * An error indicating that something went wrong specifically with MongoDB Client Encryption\n */\nvar MongoCryptError = /*#__PURE__*/function (_error_1$MongoError) {\n  _inherits(MongoCryptError, _error_1$MongoError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoCryptError(message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, MongoCryptError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptError).call(this, message, options));\n  }\n  _createClass(MongoCryptError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCryptError';\n    }\n  }]);\n  return MongoCryptError;\n}(error_1.MongoError);\nexports.MongoCryptError = MongoCryptError;\n/**\n * @public\n *\n * An error indicating an invalid argument was provided to an encryption API.\n */\nvar MongoCryptInvalidArgumentError = /*#__PURE__*/function (_MongoCryptError) {\n  _inherits(MongoCryptInvalidArgumentError, _MongoCryptError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoCryptInvalidArgumentError(message) {\n    _classCallCheck(this, MongoCryptInvalidArgumentError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptInvalidArgumentError).call(this, message));\n  }\n  _createClass(MongoCryptInvalidArgumentError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCryptInvalidArgumentError';\n    }\n  }]);\n  return MongoCryptInvalidArgumentError;\n}(MongoCryptError);\nexports.MongoCryptInvalidArgumentError = MongoCryptInvalidArgumentError;\n/**\n * @public\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create data keys\n */\nvar MongoCryptCreateDataKeyError = /*#__PURE__*/function (_MongoCryptError2) {\n  _inherits(MongoCryptCreateDataKeyError, _MongoCryptError2);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoCryptCreateDataKeyError(encryptedFields, _ref) {\n    var _this;\n    var cause = _ref.cause;\n    _classCallCheck(this, MongoCryptCreateDataKeyError);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptCreateDataKeyError).call(this, \"Unable to complete creating data keys: \".concat(cause.message), {\n      cause: cause\n    }));\n    _this.encryptedFields = encryptedFields;\n    return _this;\n  }\n  _createClass(MongoCryptCreateDataKeyError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCryptCreateDataKeyError';\n    }\n  }]);\n  return MongoCryptCreateDataKeyError;\n}(MongoCryptError);\nexports.MongoCryptCreateDataKeyError = MongoCryptCreateDataKeyError;\n/**\n * @public\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create a collection\n */\nvar MongoCryptCreateEncryptedCollectionError = /*#__PURE__*/function (_MongoCryptError3) {\n  _inherits(MongoCryptCreateEncryptedCollectionError, _MongoCryptError3);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoCryptCreateEncryptedCollectionError(encryptedFields, _ref2) {\n    var _this2;\n    var cause = _ref2.cause;\n    _classCallCheck(this, MongoCryptCreateEncryptedCollectionError);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptCreateEncryptedCollectionError).call(this, \"Unable to create collection: \".concat(cause.message), {\n      cause: cause\n    }));\n    _this2.encryptedFields = encryptedFields;\n    return _this2;\n  }\n  _createClass(MongoCryptCreateEncryptedCollectionError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCryptCreateEncryptedCollectionError';\n    }\n  }]);\n  return MongoCryptCreateEncryptedCollectionError;\n}(MongoCryptError);\nexports.MongoCryptCreateEncryptedCollectionError = MongoCryptCreateEncryptedCollectionError;\n/**\n * @public\n * An error indicating that mongodb-client-encryption failed to auto-refresh Azure KMS credentials.\n */\nvar MongoCryptAzureKMSRequestError = /*#__PURE__*/function (_MongoCryptError4) {\n  _inherits(MongoCryptAzureKMSRequestError, _MongoCryptError4);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoCryptAzureKMSRequestError(message, body) {\n    var _this3;\n    _classCallCheck(this, MongoCryptAzureKMSRequestError);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptAzureKMSRequestError).call(this, message));\n    _this3.body = body;\n    return _this3;\n  }\n  _createClass(MongoCryptAzureKMSRequestError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCryptAzureKMSRequestError';\n    }\n  }]);\n  return MongoCryptAzureKMSRequestError;\n}(MongoCryptError);\nexports.MongoCryptAzureKMSRequestError = MongoCryptAzureKMSRequestError;\n/** @public */\nvar MongoCryptKMSRequestNetworkTimeoutError = /*#__PURE__*/function (_MongoCryptError5) {\n  _inherits(MongoCryptKMSRequestNetworkTimeoutError, _MongoCryptError5);\n  function MongoCryptKMSRequestNetworkTimeoutError() {\n    _classCallCheck(this, MongoCryptKMSRequestNetworkTimeoutError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCryptKMSRequestNetworkTimeoutError).apply(this, arguments));\n  }\n  _createClass(MongoCryptKMSRequestNetworkTimeoutError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCryptKMSRequestNetworkTimeoutError';\n    }\n  }]);\n  return MongoCryptKMSRequestNetworkTimeoutError;\n}(MongoCryptError);\nexports.MongoCryptKMSRequestNetworkTimeoutError = MongoCryptKMSRequestNetworkTimeoutError;","map":null,"metadata":{},"sourceType":"script"}